# Python CircleCI 2.0 configuration file
#
# Check https://circleci.com/docs/2.0/language-python/ for more details
#
version: 2
jobs:
  build:
    docker:
      - image: circleci/buildpack-deps:stretch
    working_directory: ~/repo
    environment:
      IMAGE_NAME: amirasaad/pastebin
    steps:
      - setup_remote_docker
      - checkout
      # Download and cache dependencies
      - restore_cache:
          keys:
            - v1-dependencies-{{ checksum "requirements.txt" }}
            # fallback to using the latest cache if no exact match is found
            - v1-dependencies-

      - run:
          name: Docker build
          command: |
            echo "${DOCKER_PASSWORD}" | docker login --username "${DOCKER_USERNAME}" --password-stdin
            checkout
            docker-compose -f local.yml build
            docker tag $IMAGE_NAME:latest "$DOCKER_USERNAME"/pastebin:latest
            docker push "$DOCKER_USERNAME"/$IMAGE_NAME:latest
            docker images

      # run tests!
      # this example uses Django's built-in test-runner
      # other common Python testing frameworks include pytest and nose
      # https://pytest.org
      # https://nose.readthedocs.io
      - run:
          name: Run docker
          command: |
            echo "${DOCKER_PASSWORD}" | docker login -u "${DOCKER_USERNAME}" --password-stdin
            checkout
            docker pull "$DOCKER_USERNAME"/pastebin
            docker-compose -f local.yml up -d
      - run:
          name: Run tests
          command: |
            docker-compose -f local.yml run --rm django pytest --junitxml=test-reports/junit.xml
      - store_test_results:
          path: test-reports
      - store_artifacts:
          path: test-reports
          destination: test-reports
  docs-build:
    docker:
      - image: python:3.7
    steps:
      - checkout
      - run:
          name: Install dependencies
          command: pip install -r requirements/local.txt
      - run:
          name: Build docs
          command: cd docs/ && make html
      - persist_to_workspace:
          root: docs/_build
          paths: html
  docs-deploy:
    docker:
      - image: python:3.7
    steps:
      - checkout
      - run:
          name: Install dependencies
          command: pip install -r requirements/local.txt
      - run:
          name: Deploy docs to Github Pages
          command: cd docs/ && make github
workflows:
  version: 2
  build:
    jobs:
      - build
      - docs-build
      - docs-deploy:
          requires:
            - build
            - docs-build
          filters:
            branches:
              only: master
